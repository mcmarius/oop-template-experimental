name: 'Install packages'
description: 'Install required packages'
inputs:
  matrix:
    description: 'Matrix object encoded as json'
    required: true
    type: string

runs:
  using: "composite"
  steps:
    # Common Linux dependencies
    - name: Install Linux Dependencies
      shell: bash
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build
        # https://github.com/llvm/llvm-project/issues/78354
        sudo sysctl vm.mmap_rnd_bits=28
        #echo ${{ inputs.matrix['runs_msan'] == 'true' }}
        #echo ${{ inputs.matrix['runs_msan'] == true }}
        #echo ${{ inputs.matrix.runs_msan == true }}
        #echo ${{ inputs.matrix.runs_msan == 'true' }}
        echo ${{ fromJSON(inputs.matrix).runs_msan == 'true' }}
        echo ${{ fromJSON(inputs.matrix).runs_msan == true }}

    # Also see https://github.com/actions/runner-images/discussions/9446#discussioncomment-8668538
    - name: Install Clang ${{ fromJSON(inputs.matrix).clang_ver }}
      shell: bash
      if: runner.os == 'Linux' && fromJSON(inputs.matrix).runs_msan == true
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x ./llvm.sh
        sudo ./llvm.sh ${{ fromJSON(inputs.matrix).clang_ver }}

    - name: Install libc++ (Linux Clang ${{ fromJSON(inputs.matrix).clang_ver }})
      shell: bash
      if: runner.os == 'Linux' && fromJSON(inputs.matrix).runs_msan == true
      run: |
        # sudo apt-get update
        sudo apt-get install --no-install-recommends libc++-${{ fromJSON(inputs.matrix).clang_ver }}-dev libc++abi-${{ fromJSON(inputs.matrix).clang_ver }}-dev

    - name: Install valgrind
      shell: bash
      if: runner.os == 'Linux' && fromJSON(inputs.matrix).runs_valgrind == true
      run: |
        # sudo apt-get update
        sudo apt-get install --no-install-recommends valgrind
